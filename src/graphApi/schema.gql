scalar Any

type Tag {
    tag: String!,
    subscribtions: Int!
}

type Tags {
    data: [Tag]!
    lastKey: String
}

type Subscribtion {
    pageId: String
    senderId: String
}

type Subscribtions {
    data: [Subscribtion]!
    lastKey: String
    count: Int!
}

type Campaign {
    id: String!,
    name: String!

    action: String!
    data: String,

    include: [String]!
    exclude: [String]!
    pageId: String

    sliding: Boolean
    slide: Int
    slideRound: Int
    active: Boolean!
    in24hourWindow: Boolean!
    startAt: Float
    allowRepeat: Boolean!
    type: String

    sent: Int!
    failed: Int!
    delivery: Int!
    read: Int!
    notSent: Int!
    leaved: Int!
    queued: Int!
    negative: Int!
    positive: Int!

    hasCondition: Boolean!
    condition: String
}

type Campaigns {
    data: [Campaign]!
    lastKey: String
}

input CampaignsCondition {
    active: Boolean
    sliding: Boolean
}

type QueuingResult {
    queued: Int!
}

type PostBackResult {
    status: Int
}

type ValidationResult {
    ok: Boolean!
    error: String
}

input CreateCampaignInput {
    name: String!
    action: String!
    data: String = "{}"

    include: [String]! = []
    exclude: [String]! = []
    pageId: String

    sliding: Boolean = false
    slide: Int
    slideRound: Int
    active: Boolean! = false
    in24hourWindow: Boolean! = true
    startAt: Float
    allowRepeat: Boolean! = false
    type: String

    hasCondition: Boolean! = false
    condition: String
}

input UpdateCampaignInput {
    name: String
    action: String
    data: String

    include: [String]
    exclude: [String]
    pageId: String

    sliding: Boolean
    slide: Int
    slideRound: Int
    active: Boolean
    in24hourWindow: Boolean
    startAt: Float
    allowRepeat: Boolean
    type: String

    hasCondition: Boolean
    condition: String
}

type Query {
    "list tags statistics"
    tags(pageId:String): Tags

    "fetch user ids for selected tag"
    subscribtions (
        include: [String!] = []
        exclude: [String!] = []
        pageId: String
        limit: Int = 100
        lastKey: String
    ): Subscribtions

    "get a campaign by ID"
    campaign (
        campaignId: String!
    ): Campaign

    "list of user defined campaigns"
    campaigns(
        limit: Int
        lastKey: String
        condition: CampaignsCondition
    ): Campaigns

    "returns the API version"
    version: String!

    "export subscribtions from campaigns"
    unsuccessfulSubscribers(
        campaignId: String
        sentWithoutReaction: Boolean = false
        pageId: String
    ): Subscribtions
}

type Mutation {
    "validate conversation data"
    validateBot(bot:Any!): ValidationResult

    "invalidate a conversation cache in the chatbot"
    updateBot: Boolean

    "send a message to any user"
    postBack(pageId:String!,senderId:String!,action:String!,data:Any): PostBackResult

    "create a new campaign"
    createCampaign(campaign: CreateCampaignInput!): Campaign

    "update a campaign"
    updateCampaign(campaignId: String!, update: UpdateCampaignInput!): Campaign

    "remove a campaign"
    removeCampaign(campaignId: String!): Boolean

    "run a campaign"
    runCampaign(campaignId: String!): QueuingResult
}